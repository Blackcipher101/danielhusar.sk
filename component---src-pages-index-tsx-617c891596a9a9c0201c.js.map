{"version":3,"sources":["webpack:///./src/pages/index.tsx","webpack:///./src/components/container.tsx","webpack:///./src/components/layout.tsx","webpack:///./src/components/spacer.tsx"],"names":["Headline","styled","h1","withConfig","displayName","componentId","SubHeadline","h2","Portrait","div","IntercomLogo","About","iconStyle","height","width","marginRight","SocialWrapper","span","__webpack_exports__","_ref","data","portrait","oc","childImageSharp","fluid","intercomLogo","intercom","fixed","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_8__","image","src","react_styled_flexboxgrid__WEBPACK_IMPORTED_MODULE_5__","xs","sm","md","lg","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","alt","fadeIn","_components_spacer__WEBPACK_IMPORTED_MODULE_9__","size","href","react_social_icons__WEBPACK_IMPORTED_MODULE_6__","url","style","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","query","children","customTitle","title","customDescription","description","react_default","gatsby_browser_entry","render","_data$site$siteMetada","site","siteMetadata","keywords","Fragment","Helmet_default","lang","name","content","property","container","_2520125950","styled_components__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","props","css"],"mappings":"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","file":"component---src-pages-index-tsx-617c891596a9a9c0201c.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport styled from 'styled-components';\nimport { Col, Row } from 'react-styled-flexboxgrid';\nimport { SocialIcon } from 'react-social-icons';\nimport { oc } from 'ts-optchain';\nimport Layout from '../components/layout';\nimport Spacer from '../components/spacer';\nimport { ImageSharp } from '../types/graphql';\n\ninterface Props {\n  data: {\n    portrait: {\n      childImageSharp?: ImageSharp;\n    };\n    intercom: {\n      childImageSharp?: ImageSharp;\n    };\n  };\n}\n\nconst Headline = styled.h1`\n  font-size: 40px;\n  padding-top: 50px;\n  margin: 0 0 30px;\n\n  @media (max-width: 600px) {\n    font-size: 30px;\n    padding-top: 30px;\n  }\n`;\n\nconst SubHeadline = styled.h2`\n  font-size: 22px;\n  margin: -10px 0 20px;\n`;\n\nconst Portrait = styled.div`\n  border-radius: 5px;\n  overflow: hidden;\n`;\n\nconst IntercomLogo = styled.div`\n  display: inline-block;\n  position: relative;\n  top: 1px;\n  padding-right: 5px;\n`;\n\nconst About = styled.div`\n  font-size: 20px;\n  max-width: 500px;\n  padding-left: 30px;\n\n  @media (max-width: 45.99em) {\n    padding: 40px 0 0;\n  }\n`;\n\nconst iconStyle = {\n  height: 40,\n  width: 40,\n  marginRight: '10px',\n};\n\nconst SocialWrapper = styled.span`\n  .social-icon {\n    opacity: 0.7;\n    transition: opacity 0.3s;\n  }\n\n  .social-icon:hover {\n    opacity: 1;\n  }\n`;\n\nexport default ({ data }: Props) => {\n  const portrait = oc(data).portrait.childImageSharp.fluid();\n  const intercomLogo = oc(data).intercom.childImageSharp.fixed();\n  return (\n    <Layout image={portrait ? portrait.src : null}>\n      <Headline>Daniel Husar</Headline>\n      <Row>\n        <Col xs={12} sm={5} md={5} lg={5}>\n          {portrait ? (\n            <Portrait>\n              <Img fluid={portrait} alt=\"My portrait\" fadeIn={false} />\n            </Portrait>\n          ) : null}\n        </Col>\n        <Col xs={12} sm={7} md={7} lg={7}>\n          <About>\n            <SubHeadline>Hi!</SubHeadline>\n            My name is Daniel and I’m product engineer based in San Francisco.\n            <Spacer size={3} />\n            Right now I’m working on{' '}\n            {intercomLogo ? (\n              <IntercomLogo>\n                <Img fixed={intercomLogo} alt=\"Intercom\" fadeIn={false} />\n              </IntercomLogo>\n            ) : null}\n            <a href=\"https://www.intercom.com\">Intercom</a> <a href=\"https://www.intercom.com/messenger\">Messenger</a> to make internet business\n            personal.\n            <Spacer size={3} />\n            You can learn more about me here:\n            <Spacer size={3} />\n            <SocialWrapper>\n              <SocialIcon url=\"http://twitter.com/DanoHusar\" style={iconStyle} />\n            </SocialWrapper>\n            <SocialWrapper>\n              <SocialIcon url=\"https://github.com/danielhusar\" style={iconStyle} />\n            </SocialWrapper>\n            <SocialWrapper>\n              <SocialIcon url=\"https://www.linkedin.com/in/daniel-husar-60783958/\" style={iconStyle} />\n            </SocialWrapper>\n            <SocialWrapper>\n              <SocialIcon url=\"https://www.instagram.com/efrafa/\" style={iconStyle} />\n            </SocialWrapper>\n            <SocialWrapper>\n              <SocialIcon url=\"mailto:dano.husar@gmail.com\" style={iconStyle} />\n            </SocialWrapper>\n            <Spacer size={3} />\n            <Link to=\"/blog/\">You can also read my blog here.</Link>\n          </About>\n        </Col>\n      </Row>\n      <Spacer size={7} />\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query {\n    portrait: file(relativePath: { eq: \"images/portrait.jpeg\" }) {\n      childImageSharp {\n        fluid(maxWidth: 500) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    intercom: file(relativePath: { eq: \"images/intercom.png\" }) {\n      childImageSharp {\n        fixed(width: 16) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport default styled.div`\n  margin: 0 auto;\n  padding: 0 40px;\n  max-width: 1000px;\n\n  @media (max-width: 600px) {\n    padding: 0 20px;\n  }\n`;\n","import React, { ReactNode } from 'react';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Container from './container';\nimport '../css/typography.css';\nimport '../css/prism.css';\n\ninterface Props {\n  children: ReactNode;\n  title?: string;\n  description?: string;\n  image?: string | null;\n}\n\nconst query = graphql`\n  query SiteTitleQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        keywords\n      }\n    }\n  }\n`;\n\nexport default ({ children, title: customTitle, description: customDescription, image }: Props) => (\n  <StaticQuery\n    query={query}\n    render={data => {\n      let { title, description, keywords } = data.site.siteMetadata;\n      title = customTitle ? `${customTitle} | ${title}` : title;\n      description = customDescription || description;\n      return (\n        <>\n          <Helmet title={title}>\n            <html lang=\"en\" />\n            <meta name=\"description\" content={description} />\n            <meta name=\"keywords\" content={keywords} />\n            <meta property=\"og:title\" content={title} />\n            <meta property=\"og:description\" content={description} />\n            {image ? <meta property=\"og:image\" content={image} /> : null}\n          </Helmet>\n          <Container>{children}</Container>\n        </>\n      );\n    }}\n  />\n);\n","import styled, { css } from 'styled-components';\n\ninterface Props {\n  size: number;\n}\n\nexport default styled.div`\n  display: block;\n  ${(props: Props) =>\n    css`\n      height: ${props.size * 10}px;\n    `};\n`;\n"],"sourceRoot":""}