{"version":3,"sources":["webpack:///./.cache/gatsby-mdx/remote-mdx-dir/3010b3badc54a9dfa4a4c80e419a41b2.js","webpack:///./src/components/live.tsx","webpack:///./src/templates/post.js","webpack:///./.cache/gatsby-mdx/mdx-wrappers-dir/c145139628b6f3a04fcf58957659d797--scope-hash-3010b3badc54a9dfa4a4c80e419a41b2.js","webpack:///./src/components/container.tsx","webpack:///./src/components/layout.tsx","webpack:///./src/components/spacer.tsx","webpack:///./src/components/nav.tsx","webpack:///./src/components/small.tsx"],"names":["_3010b3badc54a9dfa4a4c80e419a41b2","React","MDXTag","LiveEditWrap","styled","code","withConfig","displayName","componentId","LiveLabel","div","_temp","onWhiteBg","css","LiveErrorWrap","LivePreviewWrap","PreComponent","props","children","className","react_default","a","createElement","react_live_es","mountStylesheet","tabIndex","lib_default","Post","_ref","post","data","mdx","banner","oc","frontmatter","childImageSharp","sizes","Fragment","nav","active","layout","title","fields","description","excerpt","image","src","spacer","size","gatsby_image_default","small","date","dist","components","pre","mdx_renderer","body","pageQuery","__webpack_exports__","objectWithoutPropertiesLoose_default","context","__mdxScope","objectSpread_default","__mdxScope_0","customTitle","customDescription","gatsby_browser_entry","query","render","_data$site$siteMetada","site","siteMetadata","keywords","Helmet_default","lang","name","content","property","container","_2520125950","styled_components__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","Nav","NavItem","NavPortrait","_ref2","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","aria-label","portrait","fixed","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","alt","fadeIn","_public_static_d_469129957_json__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"component---cache-gatsby-mdx-mdx-wrappers-dir-c-145139628-b-6-f-3-a-04-fcf-58957659-d-797-scope-hash-3010-b-3-badc-54-a-9-dfa-4-a-4-c-80-e-419-a-41-b-2-js-8e61ac0ac1761f0f37cc.js","sourcesContent":["import React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\n\nexport default { React, MDXTag }","import styled, { css } from 'styled-components';\n\nexport const LiveEditWrap = styled.code`\n  margin-bottom: 0 !important;\n  border-bottom-left-radius: 0 !important;\n  border-bottom-right-radius: 0 !important;\n  position: relative;\n\n  pre:focus {\n    outline-offset: 12px;\n  }\n`;\n\ninterface LiveLabelProps {\n  onWhiteBg?: boolean;\n}\n\nexport const LiveLabel = styled.div`\n  position: absolute;\n  top: 5px;\n  right: 0;\n  font-size: 10px;\n  text-transform: uppercase;\n  padding: 2px 3px 1px;\n  background: white;\n  color: #a04141;\n  border: 1px solid #2d2d2d;\n  border-top-left-radius: 2px;\n  border-bottom-left-radius: 2px;\n\n  ${({ onWhiteBg }: LiveLabelProps = { onWhiteBg: false }) =>\n    onWhiteBg &&\n    css`\n      right: -1px;\n    `};\n`;\n\nexport const LiveErrorWrap = styled.div`\n  .react-live-error {\n    margin: 0;\n    padding: 1em;\n    color: white;\n    background: #a04141;\n    font-size: 14px;\n  }\n`;\n\nexport const LivePreviewWrap = styled.div`\n  border: 1px solid #2d2d2d;\n  border-top: 0;\n  padding: 1em;\n  margin-bottom: 0.5em;\n  border-bottom-left-radius: 3px;\n  border-bottom-right-radius: 3px;\n  font-size: 15px;\n  position: relative;\n`;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport MDXRenderer from 'gatsby-mdx/mdx-renderer';\nimport { MDXProvider } from '@mdx-js/tag';\nimport PrismCode from 'react-prism';\nimport { LiveProvider, LiveEditor, LiveError, LivePreview } from 'react-live';\nimport { oc } from 'ts-optchain';\nimport Spacer from '../components/spacer';\nimport Layout from '../components/layout';\nimport Nav from '../components/nav';\nimport Small from '../components/small';\nimport { LiveEditWrap, LiveErrorWrap, LivePreviewWrap, LiveLabel } from '../components/live';\nimport { mdx } from '../types'; // eslint-disable-line\n\nconst PreComponent = props => props.children.props.props && props.children.props.props.className === 'language-.jsx' ? <LiveProvider mountStylesheet={false} code={props.children.props.children}>\n      <LiveEditWrap className=\"language-jsx\">\n        <LiveLabel>Edit</LiveLabel>\n        <LiveEditor tabIndex={-1} />\n      </LiveEditWrap>\n      <LiveErrorWrap>\n        <LiveError />\n      </LiveErrorWrap>\n      <LivePreviewWrap>\n        <LiveLabel onWhiteBg={true}>Preview</LiveLabel>\n        <LivePreview />\n      </LivePreviewWrap>\n    </LiveProvider> : <PrismCode className={props.children.props.props.className}>{props.children.props.children}</PrismCode>;\n\nexport default function Post({\n  data: {\n    mdx: post\n  }\n}) {\n  const banner = oc(post).frontmatter.banner.childImageSharp.sizes();\n  return <>\n      <Nav active=\"post\" />\n      <Layout title={post.fields.title} description={post.excerpt} image={banner ? banner.src : null}>\n        <Spacer size={8} />\n        {banner ? <Img sizes={banner} /> : null}\n        <h1>{post.fields.title}</h1>\n        <Small>{post.fields.date}</Small>\n        <MDXProvider components={{\n        pre: PreComponent\n      }}>\n          <MDXRenderer>{post.code.body}</MDXRenderer>\n        </MDXProvider>\n        <Spacer size={8} />\n      </Layout>\n    </>;\n}\nexport const pageQuery = graphql`\n  query($id: String!) {\n    mdx(fields: { id: { eq: $id } }) {\n      excerpt(pruneLength: 300)\n      fields {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n      frontmatter {\n        banner {\n          childImageSharp {\n            sizes(maxWidth: 920) {\n              ...GatsbyImageSharpSizes\n            }\n          }\n        }\n      }\n      code {\n        body\n      }\n    }\n  }\n`;\n","// .cache/gatsby-mdx/wrapper-components/{wrapper-filepath-hash}-{scope-hash}.js\nimport React from 'react';\nimport { MDXScopeProvider } from 'gatsby-mdx/context';\n\nimport __mdxScope_0 from '/home/travis/build/danielhusar/danielhusar.sk/.cache/gatsby-mdx/remote-mdx-dir/3010b3badc54a9dfa4a4c80e419a41b2.js';\n\nimport OriginalWrapper from '/home/travis/build/danielhusar/danielhusar.sk/src/templates/post.js';\n\nimport { graphql } from 'gatsby';\n\n// pageQuery, etc get hoisted to here\nexport const pageQuery = graphql`\n  query($id: String!) {\n    mdx(fields: { id: { eq: $id } }) {\n      excerpt(pruneLength: 300)\n      fields {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n      frontmatter {\n        banner {\n          childImageSharp {\n            sizes(maxWidth: 920) {\n              ...GatsbyImageSharpSizes\n            }\n          }\n        }\n      }\n      code {\n        body\n      }\n    }\n  }\n`;;\n\nexport default ({children, ...props}) => <MDXScopeProvider __mdxScope={{...__mdxScope_0}}>\n  <OriginalWrapper\n    {...props}\n  >\n    {children}\n  </OriginalWrapper>\n</MDXScopeProvider>","import styled from 'styled-components';\n\nexport default styled.div`\n  margin: 0 auto;\n  padding: 0 40px;\n  max-width: 1000px;\n\n  @media (max-width: 600px) {\n    padding: 0 20px;\n  }\n`;\n","import React, { ReactNode } from 'react';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Container from './container';\nimport '../css/typography.css';\nimport '../css/prism.css';\n\ninterface Props {\n  children: ReactNode;\n  title?: string;\n  description?: string;\n  image?: string | null;\n}\n\nconst query = graphql`\n  query SiteTitleQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        keywords\n      }\n    }\n  }\n`;\n\nexport default ({ children, title: customTitle, description: customDescription, image }: Props) => (\n  <StaticQuery\n    query={query}\n    render={data => {\n      let { title, description, keywords } = data.site.siteMetadata;\n      title = customTitle ? `${customTitle} | ${title}` : title;\n      description = customDescription || description;\n      return (\n        <>\n          <Helmet title={title}>\n            <html lang=\"en\" />\n            <meta name=\"description\" content={description} />\n            <meta name=\"keywords\" content={keywords} />\n            <meta property=\"og:title\" content=\"Customer Messaging Platform | Intercom\" />\n            <meta property=\"og:description\" content={description} />\n            {image ? <meta property=\"og:image\" content={image} /> : null}\n          </Helmet>\n          <Container>{children}</Container>\n        </>\n      );\n    }}\n  />\n);\n","import styled, { css } from 'styled-components';\n\ninterface Props {\n  size: number;\n}\n\nexport default styled.div`\n  display: block;\n  ${(props: Props) =>\n    css`\n      height: ${props.size * 10}px;\n    `};\n`;\n","import React, { ReactNode } from 'react';\nimport { Link, graphql, StaticQuery } from 'gatsby';\nimport Img from 'gatsby-image';\nimport styled, { css } from 'styled-components';\nimport { categories } from '../types';\nimport { File } from '../types/graphql';\n\ninterface Props {\n  active: categories;\n}\n\ninterface Data {\n  portrait: File;\n}\n\nconst Nav = styled.div`\n  display: flex;\n  align-items: center;\n  position: absolute;\n  top: 5px;\n  left: 5px;\n`;\n\nconst NavItem = styled.div`\n  margin-right: 10px;\n  display: inline-block;\n  font-size: 14px;\n\n  &:hover {\n    text-decoration: underline;\n  }\n\n  ${({ active }: { active: boolean }) =>\n    active &&\n    css`\n      text-decoration: underline;\n    `};\n`;\n\nconst NavPortrait = styled.div`\n  overflow: hidden;\n  border-radius: 5px;\n  height: 30px;\n`;\n\nconst query = graphql`\n  query {\n    portrait: file(relativePath: { eq: \"images/portrait.jpeg\" }) {\n      childImageSharp {\n        fixed(width: 30, height: 30) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n  }\n`;\n\nexport default ({ active }: Props) => (\n  <StaticQuery\n    query={query}\n    render={(data: Data) => (\n      <Nav>\n        <NavItem active={false}>\n          <Link to=\"/\" aria-label=\"About me\">\n            {data.portrait.childImageSharp && data.portrait.childImageSharp.fixed ? (\n              <NavPortrait>\n                <Img fixed={data.portrait.childImageSharp.fixed} alt=\"My portrait\" fadeIn={false} />\n              </NavPortrait>\n            ) : null}\n          </Link>\n        </NavItem>\n        <NavItem active={active === 'home'}>\n          <Link to=\"/blog\">Index</Link>\n        </NavItem>\n        {/*\n        <NavItem active={active === 'en'}>\n          <Link to=\"/blog/categories/en\">English posts</Link>\n        </NavItem>\n        <NavItem active={active === 'sk'}>\n          <Link to=\"/blog/categories/sk\">Slovak posts</Link>\n        </NavItem>\n        */}\n      </Nav>\n    )}\n  />\n);\n","import styled from 'styled-components';\n\nexport default styled.div`\n  font-size: 14px;\n  color: #8e7979;\n`;\n"],"sourceRoot":""}